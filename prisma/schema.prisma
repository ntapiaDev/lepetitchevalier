// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
  // provider = "mysql"
  // url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String            @id @default(cuid())
  name          String?           @unique
  email         String?           @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole          @default(USER)
  accounts      Account[]
  kingdoms      UsersOnKingdoms[]
  camps         Camp[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text // TODO: Useless?
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String? // TODO: Useless?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Kingdom {
  id        String            @id @default(cuid())
  name      String            @unique
  speed     Int               @default(1)
  createdAt DateTime
  users     UsersOnKingdoms[]
  camps     Camp[]
}

model UsersOnKingdoms {
  user        User     @relation(fields: [userName], references: [name])
  userName    String
  kingdom     Kingdom  @relation(fields: [kingdomName], references: [name])
  kingdomName String
  joinedAt    DateTime

  @@id([userName, kingdomName])
}

model Camp {
  id           String   @id @default(cuid())
  userName     String
  kingdomName  String
  wood         Float    @default(500)
  woodPerHour  Int      @default(90)
  stone        Float    @default(500)
  stonePerHour Int      @default(45)
  food         Float    @default(0)
  foodPerHour  Int      @default(0)
  workers      Float    @default(0)
  lastUpdate   DateTime

  user    User    @relation(fields: [userName], references: [name], onDelete: Cascade)
  kingdom Kingdom @relation(fields: [kingdomName], references: [name], onDelete: Cascade)

  @@unique([userName, kingdomName])
}
